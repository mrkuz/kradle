plugins {
    id("org.jetbrains.kotlin.jvm") version "${versions.kotlin}"
    id("net.bitsandbobs.kradle") version "${kradleVersion}"
}

group = "com.example"
version = "1.0.0"

kradle {

    general {
        bootstrap.enable()
        git.enable()
        projectProperties.enable()
        buildProperties.enable()
    }

    jvm {
        application {
            mainClass("com.example.demo.AppKt")
        }

        // targetJvm("${versions.jvm}")
        kotlin {
            useCoroutines(/* "${versions.kotlinCoroutines}" */)
            lint {
                // ktlintVersion("${versions.ktlint}")
            }
            codeAnalysis {
                // detektConfigFile("detekt-config.yml")
                // detektVersion("${versions.detekt}")
            }
            test {
                useKotest(/* "${versions.kotest}" */)
                useMockk(/* "${versions.mockk}" */)
            }
        }
        java {
            lint {
                // checkstyleConfigFile("checkstyle.xml")
                // checkstyleVersion("${versions.checkstyle}")
            }
            codeAnalysis {
                // pmdVersion("${versions.pmd}")
                spotBugs {
                    // version("${versions.spotbugs}")
                    useFbContrib(/* ${versions.fbContrib} */)
                    useFindSecBugs(/* ${versions.findSecBugs} */)
                }
            }
        }

        dependencyUpdates.enable()
        vulnerabilityScan.enable()
        lint.enable()
        codeAnalysis.enable()
        developmentMode.enable()

        test {
            prettyPrint(true)
            withIntegrationTests(true)
            withFunctionalTests(true)
            withJunitJupiter(/* "${versions.junit}" */)
            withJacoco(/* "${versions.jacoco}" */)
        }

        benchmark {
            // jmhVersion("${versions.jmh}")
        }

        packaging {
            uberJar {
                // minimize(false)
            }
        }

        docker {
            withJvmKill(/* "${versions.jvmKill}" */)
            // baseImage("bellsoft/liberica-openjdk-alpine:${versions.jvm}")
            // withAppSh(false)
            // ports.add()
            // javaOpts("")
        }

        documentation.enable()
    }
}
